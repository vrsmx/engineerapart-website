{"version":3,"file":"component---src-pages-contact-tsx-4e94d170aa428526a1a9.js","mappings":"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","sources":["webpack://engineerapart-website/./src/components/PageHeader/PageHeader.tsx","webpack://engineerapart-website/./src/modules/Shared/ContactFormWizard/ContactFormWizard.utils.tsx","webpack://engineerapart-website/./src/modules/Contact/Calendar/Calendar.tsx","webpack://engineerapart-website/./src/modules/Shared/ContactForm/ContactForm.module.scss","webpack://engineerapart-website/./src/modules/Shared/ContactForm/ContactForm.tsx","webpack://engineerapart-website/./src/assets/icons/EmailIcon.tsx","webpack://engineerapart-website/./src/modules/Contact/ContactLinks/ContactLinks.tsx","webpack://engineerapart-website/./src/pages/contact.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as styles from './PageHeader.module.scss';\n\ninterface Props {\n  title: string;\n  underline: string;\n  cta?: React.ReactNode;\n}\nexport const PageHeader: React.FC<Props> = ({title, underline, cta}) => {\n  return (\n    <div\n      className={`${styles.page_header_component} page-container flex column pdg-top-l pdg-btm-l txt-light`}\n    >\n      <h1 className=\"txt-left txt-max-width-xl mrg-btm-xxs\">{title}</h1>\n      <h2 className=\"page-header-underline txt-left txt-max-width-xs mrg-btm-xxs\">\n        {underline}\n      </h2>\n      <div className=\"flex\">{cta}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  ContactFormWizardValues,\n  ListKeys,\n  ListUpdate,\n  UpdateContactFormWizard,\n} from 'src/modules/Shared/ContactFormWizard/ContactFormWizard.types';\n\ninterface UseContactFormWizard {\n  data: ContactFormWizardValues;\n  updateList: ListUpdate;\n  update: UpdateContactFormWizard;\n  onSubmit: () => void;\n  loading: boolean;\n  error: string | null;\n  isSent: boolean;\n}\nconst INITIAL_VALUES: ContactFormWizardValues = {\n  services: [],\n  hireMethod: [],\n  name: '',\n  lastname: '',\n  company: '',\n  phone: '',\n  email: '',\n  message: '',\n};\nexport const useContactFormWizard = (): UseContactFormWizard => {\n  const [loading, setLoading] = React.useState(false);\n  const [isSent, setIsSent] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [form, setForm] = React.useState(INITIAL_VALUES);\n\n  const onSubmit = () => {\n    console.log('submit', form);\n    setIsSent(true);\n  };\n\n  const updateList = (targetId: string, listName: ListKeys) => {\n    let newList = [...form[listName]];\n    newList =\n      newList.indexOf(targetId) === -1\n        ? [...newList, targetId]\n        : newList.filter((id) => id !== targetId);\n\n    setForm((prev) => ({...prev, [listName]: newList}));\n  };\n\n  return {\n    loading,\n    error,\n    data: form,\n    isSent,\n    updateList,\n    update: setForm,\n    onSubmit: onSubmit,\n  };\n};\n","import * as React from 'react';\nimport * as styles from './Calendar.module.scss';\n\nexport const Calendar: React.FC = () => {\n  return (\n    <div\n      className={`${styles.calendar_container} gradient-blue-turquioise round-corner-primary`}\n      style={{height: '395px'}}\n    ></div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var form_input = \"ContactForm-module--form_input--068fd\";\nexport var form_row = \"ContactForm-module--form_row--03ded\";","import * as React from 'react';\nimport {ContactFormWizardValues} from '../ContactFormWizard/ContactFormWizard.types';\nimport {useContactFormWizard} from '../ContactFormWizard/ContactFormWizard.utils';\nimport * as styles from './ContactForm.module.scss';\n\nexport const ContactForm: React.FC = () => {\n  const {data, onSubmit, isSent, update} = useContactFormWizard();\n\n  const handlClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    onSubmit();\n  };\n\n  const handleChange = (\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const {name, value} = e.currentTarget;\n\n    update((prev) => ({\n      ...prev,\n      [name as keyof ContactFormWizardValues]: value,\n    }));\n  };\n\n  return (\n    <form className=\"flex column full-width\">\n      <div className={`${styles.form_row} flex justify-between`}>\n        <input\n          onChange={handleChange}\n          className={`${styles.form_input} full-width mrg-btm-xs`}\n          name=\"name\"\n          placeholder=\"Name\"\n          value={data.name}\n        />\n        <input\n          onChange={handleChange}\n          className={`${styles.form_input} full-width mrg-btm-xs`}\n          name=\"lastname\"\n          placeholder=\"Lastname\"\n          value={data.lastname}\n        />\n      </div>\n      <input\n        onChange={handleChange}\n        className={`${styles.form_input}`}\n        name=\"company\"\n        placeholder=\"Company\"\n        value={data.company}\n      />\n      <input\n        onChange={handleChange}\n        className={`${styles.form_input}`}\n        name=\"phone\"\n        placeholder=\"Phone\"\n        value={data.phone}\n      />\n      <input\n        onChange={handleChange}\n        className={`${styles.form_input}`}\n        name=\"email\"\n        placeholder=\"Email\"\n        type=\"email\"\n        value={data.email}\n      />\n      <textarea\n        onChange={handleChange}\n        className={`${styles.form_input}`}\n        name=\"message\"\n        placeholder=\"Message\"\n        cols={30}\n        rows={10}\n        value={data.message}\n      />\n      <div className=\"flex justify-end\">\n        <button\n          className=\"button small primary expand\"\n          disabled={isSent}\n          onClick={handlClick}\n        >\n          Send\n        </button>\n      </div>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport {IconProps} from './Icons.types';\n\nexport const EmailIcon: React.FC<IconProps> = ({className, styles}) => (\n  <svg\n    id=\"Layer_2\"\n    data-name=\"Layer 2\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 55.63 43.11\"\n    className={className}\n    style={styles}\n  >\n    <g id=\"Capa_1\" data-name=\"Capa 1\">\n      <path d=\"M46.87,0H8.76C3.93,0,0,3.93,0,8.76v25.59c0,4.83,3.93,8.76,8.76,8.76H46.87c4.83,0,8.76-3.93,8.76-8.76V8.76c0-4.83-3.93-8.76-8.76-8.76Zm0,1.95c1.32,0,2.56,.39,3.61,1.04L27.53,20.65,5.15,3c1.05-.66,2.29-1.05,3.62-1.05H46.87Zm6.81,32.4c0,3.76-3.06,6.81-6.81,6.81H8.76c-3.76,0-6.81-3.06-6.81-6.81V8.76c0-1.71,.64-3.28,1.69-4.48L26.92,22.64c.18,.14,.39,.21,.6,.21s.42-.07,.59-.2L51.99,4.28c1.05,1.2,1.69,2.76,1.69,4.48v25.59Z\" />\n    </g>\n  </svg>\n);\n","import * as React from 'react';\nimport {EmailIcon} from 'src/assets/icons/EmailIcon';\nimport {LinkedInIcon} from 'src/assets/icons/LinkedInIcon';\n\nconst CONTACT_EMAIL = 'contact@engineerapart.com';\n\nexport const ContactLinks: React.FC = () => {\n  return (\n    <ul className=\"flex column\">\n      <li className=\"flex align-center mrg-btm-xs\" style={{gap: '1em'}}>\n        <div className=\"icon-container\">\n          <EmailIcon className=\"icon-blue\" styles={{width: 40, height: 40}} />\n        </div>\n        <a href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a>\n      </li>\n      <li className=\"flex align-center mrg-btm-xs\" style={{gap: '1em'}}>\n        <div className=\"icon-container\">\n          <LinkedInIcon\n            className=\"icon-blue\"\n            styles={{width: 35, height: 35}}\n          />\n        </div>\n        <a href=\"https://www.linkedin.com/company/engineerapart\">LinkedIn</a>\n      </li>\n    </ul>\n  );\n};\n","import * as React from 'react';\nimport {HeadFC, Link, PageProps} from 'gatsby';\nimport {PageHeaderNavbar} from 'src/components/Navbar/PageHeaderNavbar/PageHeaderNavbar';\nimport {PageHeader} from 'src/components/PageHeader/PageHeader';\nimport {Topbar} from 'src/components/Topbar/Topbar';\nimport {Footer} from 'src/components/Footer/Footer';\nimport {TwoColumnLayout} from 'src/components/TwoColumnLayout/TwoColumnLayout';\nimport {Calendar} from 'src/modules/Contact/Calendar/Calendar';\nimport {ContactForm} from 'src/modules/Shared/ContactForm/ContactForm';\nimport {ContactLinks} from 'src/modules/Contact/ContactLinks/ContactLinks';\n\nconst ContactPage: React.FC<PageProps> = () => {\n  return (\n    <>\n      <main className=\"page\">\n        <Topbar color=\"black\" light={true} />\n        <PageHeaderNavbar light={true} />\n        <section className=\"bg-black full-width\">\n          <PageHeader\n            title=\"Our team of experts are ready to help\"\n            underline=\"Doesn’t matter the problem, If it’s software we can help you.\"\n            cta={\n              <Link className=\"button primary big\" to=\"/contact\">\n                Call the experts\n              </Link>\n            }\n          />\n        </section>\n        <section className=\"page-container mrg-top-xl mrg-btm-l\">\n          <TwoColumnLayout\n            leftSize={5}\n            rightSize={3}\n            leftColumn={\n              <h3 className=\"section-header\">\n                Meet the experts and grow your teams\n              </h3>\n            }\n            rightColumn={\n              <div className=\"flex column align-start\" style={{gap: '2em'}}>\n                <h4 className=\"section-header-underline\">\n                  We are happy and ready to aid you build your teams of\n                  qualified engineers. Doesn't matter the size or stack\n                </h4>\n                <button className=\"button primary\">Schedule a call</button>\n              </div>\n            }\n          />\n        </section>\n        <section className=\"page-container pdg-btm-xl\">\n          <Calendar />\n        </section>\n        <section className=\"page-container mrg-top-xl mrg-btm-xl\">\n          <TwoColumnLayout\n            alignItems=\"start\"\n            leftColumn={\n              <div className=\"flex column\">\n                <h3 className=\"section-header mrg-btm-xs\">\n                  Or leave a message\n                </h3>\n                <h4 className=\"section-header-underline  mrg-btm-s\">\n                  We will reach out to you to discuss in more detail how we can\n                  help you build or grow your software development teams.\n                </h4>\n                <ContactLinks />\n              </div>\n            }\n            rightColumn={<ContactForm />}\n          />\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default ContactPage;\n\nexport const Head: HeadFC = () => <title>Contact Page</title>;\n"],"names":["PageHeader","_ref","title","underline","cta","React","className","styles","INITIAL_VALUES","services","hireMethod","name","lastname","company","phone","email","message","useContactFormWizard","loading","setLoading","isSent","setIsSent","error","setError","form","setForm","data","updateList","targetId","listName","newList","indexOf","filter","id","prev","update","onSubmit","console","log","Calendar","style","height","form_input","ContactForm","handleChange","e","value","currentTarget","onChange","placeholder","type","cols","rows","disabled","onClick","preventDefault","EmailIcon","xmlns","viewBox","d","CONTACT_EMAIL","ContactLinks","gap","width","href","LinkedInIcon","Topbar","color","light","PageHeaderNavbar","Link","to","TwoColumnLayout","leftSize","rightSize","leftColumn","rightColumn","alignItems","Footer","Head"],"sourceRoot":""}